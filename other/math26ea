// API callback
related_results_labels_thumbs({"version":"1.0","encoding":"UTF-8","feed":{"xmlns":"http://www.w3.org/2005/Atom","xmlns$openSearch":"http://a9.com/-/spec/opensearchrss/1.0/","xmlns$blogger":"http://schemas.google.com/blogger/2008","xmlns$georss":"http://www.georss.org/georss","xmlns$gd":"http://schemas.google.com/g/2005","xmlns$thr":"http://purl.org/syndication/thread/1.0","id":{"$t":"tag:blogger.com,1999:blog-3061683056005047223"},"updated":{"$t":"2016-02-21T22:49:49.680+01:00"},"category":[{"term":"science"},{"term":"games"},{"term":"tools"},{"term":"neuroscience"},{"term":"technology"},{"term":"cool"},{"term":"programming"},{"term":"review"},{"term":"web"},{"term":"hacks"},{"term":"art"},{"term":"cloud"},{"term":"linux"},{"term":"math"},{"term":"news"},{"term":"physics"},{"term":"thoughts"},{"term":"video"}],"title":{"type":"text","$t":"Pepeâ€™s Code Delicias"},"subtitle":{"type":"html","$t":""},"link":[{"rel":"http://schemas.google.com/g/2005#feed","type":"application/atom+xml","href":"http:\/\/codedelicias.blogspot.com\/feeds\/posts\/default"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/3061683056005047223\/posts\/default\/-\/math?alt=json-in-script\u0026max-results=6"},{"rel":"alternate","type":"text/html","href":"http:\/\/codedelicias.blogspot.com\/search\/label\/math"}],"author":[{"name":{"$t":"pepgma"},"uri":{"$t":"http:\/\/www.blogger.com\/profile\/04989816169651866782"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"16","height":"16","src":"http:\/\/img2.blogblog.com\/img\/b16-rounded.gif"}}],"generator":{"version":"7.00","uri":"http://www.blogger.com","$t":"Blogger"},"openSearch$totalResults":{"$t":"1"},"openSearch$startIndex":{"$t":"1"},"openSearch$itemsPerPage":{"$t":"6"},"entry":[{"id":{"$t":"tag:blogger.com,1999:blog-3061683056005047223.post-2043388896043599985"},"published":{"$t":"2015-07-17T19:24:00.000+02:00"},"updated":{"$t":"2015-09-28T11:18:31.729+02:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"math"},{"scheme":"http://www.blogger.com/atom/ns#","term":"neuroscience"},{"scheme":"http://www.blogger.com/atom/ns#","term":"programming"},{"scheme":"http://www.blogger.com/atom/ns#","term":"science"},{"scheme":"http://www.blogger.com/atom/ns#","term":"tools"}],"title":{"type":"text","$t":"Canonical correlation analysis (CCA): a simple example"},"content":{"type":"html","$t":"\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/3.bp.blogspot.com\/-j_jq04O2rDA\/VggHkIgBaWI\/AAAAAAAAANE\/rkkHqYtOfog\/s1600\/cca.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" height=\"328\" src=\"http:\/\/3.bp.blogspot.com\/-j_jq04O2rDA\/VggHkIgBaWI\/AAAAAAAAANE\/rkkHqYtOfog\/s640\/cca.png\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Ca href=\"https:\/\/en.wikipedia.org\/wiki\/Canonical_correlation\"\u003ECanonical correlation analysis (CCA)\u003C\/a\u003E is a tool to find relations among two sets of random variables. The result of CCA is a new pair of sets of random variables, the canonical variables, which represent potential linear relations between the original sets. As a tool to analyze the relation between two signals or time domain systems, CCA is a powerful method to discover intrinsic linear relations between the two systems.\u003Cbr \/\u003E\u003Cbr \/\u003EA few days ago I had to understand how CCA works for a presentation and found relatively little information online, and almost no simple examples that I could use to visualize it. At the end it resulted to be a rather simple concept. Here I present a simple example with artificial signals I designed for my presentation.\u003Cbr \/\u003E\u003Cbr \/\u003EThe above figure presents two simple systems and the resulting canonical variables and coefficients. The signals were conveniently created to display simple linear relations. Note that x1 and x3 are basically just a scaled version of y1 so one would expect a high correlation among them and potentially a canonical variable would explain that. The variables x2 and y2 also exhibit a relation but this time a rather weak one. The graph to the left represents this relationships with arrows. Note that CCA allows to compare sets with different numbers of variables, just another beauty of the method.\u003Cbr \/\u003E\u003Cbr \/\u003EThe results of CCA for this example are shown no the right of the above figure. The two canonical coefficients show the \"strength\" of the relations between the two sets (the method produces two i.e. the minimum between the number of elements of the two sets: 2 vs 3). The two pairs of canonical \"systems\": (u1, u2) and (v1, v2) represent the linear combinations of variables of each system in the form they produce the strongest correlations among the original sets (x's and y's). As such they can be written as linear equations from the original variables.\u003Cbr \/\u003E\u003Cbr \/\u003EThe Matlab code below was used to produce the figures above. Another for to visualize the relations between the variables is to plot all possible combinations of variables as scatter plots (x's vs y's). That plot is shown after the code.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre\u003E\u003Ccode class=\"matlab\"\u003E%% Create example canonical correlation plots in Matlab\u003Cbr \/\u003E\u003Cbr \/\u003E% Build some simple signals with optional noise (s)\u003Cbr \/\u003Et = 0:0.1:10;\u003Cbr \/\u003El = length(t);\u003Cbr \/\u003Es = 0;\u003Cbr \/\u003EX(:,1) = cos(t) + s*rand(1,l);\u003Cbr \/\u003EX(:,2) = sin(t\/2.5) + s*rand(1,l);\u003Cbr \/\u003EX(:,3) = 1.2*cos(t) + 0.4 + s*rand(1,l) + t*0.0;\u003Cbr \/\u003E\u003Cbr \/\u003EY(:,1) = 0.4*cos(t) + 1.5 + s*rand(1,l);\u003Cbr \/\u003EY(:,2) = sin(t\/2.2+0.4) - 0.4 + t*0.3 + s*rand(1,l);\u003Cbr \/\u003E\u003Cbr \/\u003E% Plot signals over time\u003Cbr \/\u003Efigure(1)\u003Cbr \/\u003Esubplot(2,2,1); plot(t,X); ylim([-1.1 6])\u003Cbr \/\u003Elegend('x_1','x_2','x_3')\u003Cbr \/\u003Esubplot(2,2,3); plot(t,Y(:,1),'m',t,Y(:,2),'k'); ylim([-1.1 6])\u003Cbr \/\u003Elegend('y_1','y_2')\u003Cbr \/\u003E\u003Cbr \/\u003E% It is usually prudent to check the rank, just display it\u003Cbr \/\u003Erank(X)\u003Cbr \/\u003Erank(Y)\u003Cbr \/\u003E\u003Cbr \/\u003E% Perform CCA using Matlabs function\u003Cbr \/\u003E[A,B,r,U,V] = canoncorr(X,Y);\u003Cbr \/\u003E\u003Cbr \/\u003E% Just print out results\u003Cbr \/\u003EA,B,r\u003Cbr \/\u003E\u003Cbr \/\u003Esubplot(2,2,2); plot(t,U); ylim([-3 2])\u003Cbr \/\u003Esubplot(2,2,4); plot(t,V); ylim([-3 2])\u003Cbr \/\u003E\u003Cbr \/\u003E%% Plot canonical variables \u003Cbr \/\u003Efigure(2); clf; \u003Cbr \/\u003Esubplot(2,1,1); hold all; plot(t,X*A); plot(t,U);\u003Cbr \/\u003Esubplot(2,1,2); hold all; plot(t,Y*B); plot(t,V);\u003Cbr \/\u003E\u003Cbr \/\u003E%% Plot signals against each other\u003Cbr \/\u003Efigure(3)\u003Cbr \/\u003Esubplot(3,2,1); plot(X(:,1),Y(:,1),'k.')\u003Cbr \/\u003Esubplot(3,2,3); plot(X(:,2),Y(:,1),'k.')\u003Cbr \/\u003Esubplot(3,2,5); plot(X(:,3),Y(:,1),'k.')\u003Cbr \/\u003Esubplot(3,2,2); plot(X(:,1),Y(:,2),'k.')\u003Cbr \/\u003Esubplot(3,2,4); plot(X(:,2),Y(:,2),'k.')\u003Cbr \/\u003Esubplot(3,2,6); plot(X(:,3),Y(:,2),'k.')\u003Cbr \/\u003E\u003Cbr \/\u003E% Some information about their correlations\u003Cbr \/\u003Ep = corrcoef([X Y]);\u003Cbr \/\u003Ep = p(1:3,4:5)\u003C\/code\u003E\u003C\/pre\u003E\u003Cbr \/\u003EThe scatter plot for figure(3):\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/1.bp.blogspot.com\/-9vKifd32KJI\/VgkEcIObl7I\/AAAAAAAAANY\/Q9lXivC2s2g\/s1600\/ccascat.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" height=\"598\" src=\"http:\/\/1.bp.blogspot.com\/-9vKifd32KJI\/VgkEcIObl7I\/AAAAAAAAANY\/Q9lXivC2s2g\/s640\/ccascat.png\" width=\"640\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E"},"link":[{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/3061683056005047223\/posts\/default\/2043388896043599985"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/3061683056005047223\/posts\/default\/2043388896043599985"},{"rel":"alternate","type":"text/html","href":"canonical-correlation-analysis-simple.html","title":"Canonical correlation analysis (CCA): a simple example"}],"author":[{"name":{"$t":"pepgma"},"uri":{"$t":"http:\/\/www.blogger.com\/profile\/04989816169651866782"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"16","height":"16","src":"http:\/\/img2.blogblog.com\/img\/b16-rounded.gif"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"http:\/\/3.bp.blogspot.com\/-j_jq04O2rDA\/VggHkIgBaWI\/AAAAAAAAANE\/rkkHqYtOfog\/s72-c\/cca.png","height":"72","width":"72"}}]}});